@model HighSchoolHacking.Models.Section

@{
    string title = String.IsNullOrWhiteSpace(Model.Title) ? "" : Model.Title.Replace(" ", "-");
}

<section class="changer border background @Model.Color" id="@title.Replace(" ", "-")" contracted="@Model.Contracted">
    @{
        string head = @Model.Large ? "h1" : "h2";
        string articleClass = (Model.Paragraphs == null) ? "empty" : "filled";
    }

    @Html.Raw("<" + head + ">")
    @if (!String.IsNullOrWhiteSpace(Model.Title)) { 
        <span title="@Model.Title">
            @Model.Title

            @if (!String.IsNullOrWhiteSpace(Model.Extension))
            {
                if (!String.IsNullOrWhiteSpace(Model.Back))
                {
                    <small class="extension">
                        <a href="@Model.Back">
                            .@Model.Extension
                        </a>
                    </small>
                }
                else
                {
                    <small class="extension">.@Model.Extension</small>
                }
            }
        </span>
    }
    @Html.Raw("</" + head + ">")

    <article class="@articleClass">
        @if (!String.IsNullOrWhiteSpace(Model.Image))
        {
            <img src="~/Content/Images/@Model.Image" class="floater" />
        }

        @if (Model.Slogans != null && Model.Slogans.Length > 0)
        {
            int index = new Random().Next(Model.Slogans.Length);
            string slogan = Model.Slogans[index];
            <h3 class="slogan">
                @slogan
            </h3>
            <hr />
        }

        @if (Model.Paragraphs != null)
        { 
            <div class="paragraphs">
                @{
                    foreach (string paragraph in Model.Paragraphs)
                    {
                        <p>@Html.Raw(paragraph)</p>
                    }

                    if (!String.IsNullOrWhiteSpace(Model.Goto))
                    {
                        <a class="goto" href="@Model.Goto.Replace(" ", "")">
                            <h4>
                                <span class="goto-arrows">
                                    &gt; &gt;
                                </span>

                                Go to @Model.Goto.Trim('/')

                                <span class="goto-arrows">
                                    &gt; &gt;
                                </span>
                            </h4>
                        </a>
                    }

                    if (Model.Links != null && Model.Links.Count > 0)
                    {
                        <hr />

                        <ul class="links">
                            @foreach (KeyValuePair<string, string> link in Model.Links)
                            {
                                <li>
                                    <strong>@link.Key</strong>: <a href="@link.Value">@link.Value</a>
                                </li>
                            }
                        </ul>
                    }
                }
            </div>
        }
    </article>
</section>