@using HighSchoolHacking.Models

@{
    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = Section.GetNextColor(Model.Color, 3),
        Title = "File I/O",
        Extension = "python",
        Large = true,
        Back = "/Python",
        Paragraphs = new string[]
        {
            "Now that you're developing in WingIDE, you can start having your code read from and write to files. File I/O is how a lot of programs store persistent data on your computer, and a lot of the lessons here will use it.",
            "Quick note before you start: the files you're using have to be in the same folder as your .py code files. If you're getting <code>file not found</code> errors, either your file is in the wrong folder, or you're not using the right name of the file."
        }
    });

    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = Section.GetNextColor(Model.Color, 4),
        Title = "Reading files",
        Paragraphs = new string[] 
        { 
            "To use a file in Python, you use the <code>open</code> command. It has two parameters, the String name of the file (including the extension!) and a String saying how you want to use it. For reading, that's \"r\":",
            Section.WrapCode("python", new string[]
            {
                "my_file = open(\"stuff.txt\", \"r\")"
            }),
            "If the file doesn't exist, you'll get an error saying <code>No such file or directory</code>. Otherwise, the <code>my_file</code> variable is now pointing to your file (if you type it into the shell and hit enter, it'll show you a small bit of info on it).",
            "Getting the contents of the file is done using the <code>.read()</code> member Function of the file object. It returns a String containing the first line of the file (we'll go into other methods later). The next time you call <code>.read()</code>, it'll take in the second line, and so on.",
            Section.WrapCode("python", new string[]
            {
                "my_file.read()"
            }),
            "When you're done with your file, make sure to close it:",
            Section.WrapCode("python", new string[]
            {
                "my_file.close()"
            }),
            "In order to read from a file, it has to be open. Therefore, you have to call <code>read()</code> <em>before</em> you close the file. You can do whatever you want with the String it returns since that String no longer has anything to do with the file.",
            Section.WrapCode("python", new string[]
            {
                "my_file - open(\"stuff.txt\", \"r\")",
                "stuff = my_file.read()",
                "my_file.close()",
                "",
                "print(stuff) # \"Hello world!\""
            }),
            "<em>Contents of stuff.txt:</em>",
            Section.WrapCode("text", new string[]
            {
                "Hello world!"
            }),
            Section.WrapHead("Lines"),
            "Alternately, you can loop through each line in the file. The way Python lets you do this is really nifty: you loop through it just like in a <code>for</code> loop!",
            Section.WrapCode("python", new string[]
            {
                "my_file - open(\"stuff.txt\", \"r\")",
                "for line in my_file:",
                "    print(line)",
                "my_file.close()"
            }),
            "<em>Contents of stuff.txt:</em>",
            Section.WrapCode("text", new string[]
            {
                "Hello mother!",
                "Hello father!",
                "Fleas ticks mosquitos",
                "Really bother!"
            })
        }
    });

    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = Section.GetNextColor(Model.Color, 5),
        Title = "Writing to files",
        Paragraphs = new string[]
        { 
            "Writing to files is a lot like reading in reverse. It's about the same complexity, except you have to open the file with a \"w\" command, and use the <code>write()</code> Function instead.",
            Section.WrapCode("python", new string[]
            {
                "my_file = open(\"stuff.txt\", \"w\")",
                "my_file.write(\"Good night, sweet prince.\")",
                "my_file.close()",
                "",
                "my_file = open(\"stuff.txt\", \"r\")",
                "stuff = my_file.read()",
                "my_file.close()",
                "",
                "print(stuff) # \"Good night, sweet prince.\""
            }),
            "<em>Contents of stuff.txt after this:</em>",
            Section.WrapCode("text", new string[]
            {
                "Good night, sweet prince."
            }),
            "Writing to the file replaces what's already there, so instead of \"w\" you can put \"a\" to append.",            
        }
    });
}
