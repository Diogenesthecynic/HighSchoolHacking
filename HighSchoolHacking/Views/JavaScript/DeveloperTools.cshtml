@using HighSchoolHacking.Models

@{
    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = Section.GetNextColor(Languages.JavaScript.Color, 2),
        Title = "Developer Tools",
        Large = true,
        Extension = "javascript",
        Back = "/JavaScript/Learn",
        Paragraphs = new string[]
        {
            "Modern web browsers have something call Development Tools, which let you run JavaScript and mess with web pages. They're really powerful, so we're going to teach you how to use them.",
            "We use <a href=\"http://www.google.com/chrome\">Google Chrome</a> for these lessons because it's excellent. You can use any modern browser; the tools might look slightly different, but they should work the same.",
            "Press the F12 key on your keyboard to open the tools. The <a href=\"https://developer.chrome.com/devtools\">Google Page on Development Tools</a> has more shortcuts that you can use too, and screenshots you can use with these instructions. You can also press or hold the top-right rectangular icon (next to the close <code>x</code>) to make the tools vertical/horizontal/full-screen."
        }
    });

    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = Section.GetNextColor(Languages.JavaScript.Color, 3),
        Title = "Elements",
        Paragraphs = new string[]
        {
            "When you first open the console, you'll probably either be in the Elements tab or Console. Tabs are listed in the top row of the console and are <strong>Elements</strong>, <small><em>Network, Sources, Timeline, Profiles, Network, Resources, Audits,</em></small> and <strong>Console</strong>. We only care about Elements and Console.",
            "Open the Elements tab. Inside it is a bunch of markup that shouldn't make any sense, mainly <code>&lt;div&gt;</code> and <code>&lt;script&gt;</code> and similar. This is called <a href=\"http://en.wikipedia.org/wiki/HTML\">HTML</a>, and you don't really to know how it works. Just remember that a page has a bunch of \"elements\" in it, which can have either more elements or text inside them.",
            "Each element is formatted like this, where (children) can be other elements or plain text:",
            Section.WrapCode("php", new string[]
            {
                "<tag>",
                "    (children)",
                "</tag>"
            }),
            "You can see how this page is structured in the Elements tab. There should be an <code>html</code> element at or near the top, labeled <code>&lt;html class=\"</code> and then a bunch of meaningless words. HTML elements can have attributes, and the <code>&lt;html&gt;</code> element has a class attribute (we don't care what that does).",
            "Inside the <code>&lt;html&gt;</code> tag should be <code>&lt;head&gt;</code> and <code>&lt;body&gt;</code>. Inside <code>&lt;body&gt;</code> should be a bunch of stuff, which is what you actually see on the page. If you expand the <code>&lt;div class=\"container body-content\"&gt;</code> you'll see a <code>&lt;section&gt;</code> element for each of the sections on the page. Cool.",
            Section.WrapHead("Changing elements"),
            "Inside the first <code>&lt;section&gt;</code> element, there should be an <code>&lt;h1&gt;</code> element and inside that, a <code>&lt;span&gt;</code> with the text \"Developer Tools\" inside it. To recap, the full path is:",
            "<code>html > body > div > section > h1 > span</code>",
            "Double-click on the text of the <code>&lt;h1&gt;</code> (\"Developer Tools\") in the inspector (developer tools). It should become a box with a blue background where you can type in: type \"Nope\" and hit Enter. In the page itself, you should see the top header say \"Nope\". That means exactly what you think, you just used developer tools to change what the page says!",
            "Unfortunately this change is only on your computer, and goes away if you refresh the page.",
            "There's actually a nice shortcut that lets you easily change any element. Right click on any text on this page and select \"Inspect Element\". It should bring you to the element in the Elements tab, so you can type whatever you want into it."
        }
    });

    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = "steel",
        Title = "Exercises",
        Paragraphs = new string[]
        {
            Section.WrapList(new string[]
            {
                "Spend at least five or ten minutes changing various elements on this page. Get comfotable looking at an element in the inspector and on the page. Get used to navigating through the page and inspector, and finding text you can change.",
                "If you haven't already, put your full name instead of Josh's in the footer.",
                "Change the email in the footer to be your email instead of Josh's.",
                "Change the <code>href</code> attribute of the footer's <code>&lt;a&gt;</code> link containing the email to be <code>mailto:</code> + your email."
            })
        }
    });

    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = Section.GetNextColor(Languages.JavaScript.Color, 4),
        Title = "The Console",
        Paragraphs = new string[]
        {
            "Go to the Console tab. When used under this page, the console probably has a lot of useless info on it, so press the clear button in the top left corner (it's a circle with a diagonal line through it) to clear the console.",
            "What you're seeing here is another shell, a lot like repl.it's but with fewer features. Try a couple of commands in it:",
            Section.WrapCode(Model.NameLower, new string[]
            {
                "console.log(\"Hello world!\");"
            }),
            Section.WrapCode(Model.NameLower, new string[]
            {
                "for (i = 0; i < 3; i = i + 1) {",
                "    console.log(\"Hello world!\");",
                "}"
            }),
            "If the second code block didn't work, that's because your console things you hitting Enter was to submit. You can either...",
            Section.WrapList(false, new string[]
            {
                "Remember to always press Shift + Enter in the console to start a new line, though it won't auto-indent for you which is really annoying.",
                "Copy & paste code from repl.it or a text editor into it."
            }),
            "Either way, one nice feature the console has is auto-completion: if you just type <code>console.l</code> and wait, it'll show the remaining <code>og</code> in gray, which you can then fill in my pressing Tab or the right arrow key."
        }
    });
}