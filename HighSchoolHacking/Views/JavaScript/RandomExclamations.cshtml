@using HighSchoolHacking.Models
@model Language

@{
    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = Section.GetNextColor(Model.Color, 6),
        Title = "Random Exclamations",
        Extension = Model.NameLower,
        Large = true,
        Back = "/" + Model.Name + "/Learn",
        Paragraphs = new string[]
        {
            "Building off the Bouncing Elements exercise, JavaScript can also add elements to a page and mess around with them. This lesson explores random number generation and how you can use it to spice up your pages."
        }
    });

    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = Section.GetNextColor(Model.Color, 7),
        Title = "Random Number Generation",
        Paragraphs = new string[]
        { 
            "First, lets learn about how to make random numbers. Almost every language does this differently, but JavaScript's implementation is one of the simplest.",
            "JavaScript gives you a <code>Math</code> object you can use. It has a <code>.random()</code> Function that returns a number between 0 and 1, at random.",
            Section.WrapCode("javascript", new string[]
            {
                "console.log(Math.random()); // 0.22834192538721...",
                "console.log(Math.random()); // 0.92835109283528...",
                "console.log(Math.random()); // 0.57238572107582...",
                "console.log(Math.random()); // 0.87917253987238...",
                "console.log(Math.random()); // 0.29837198273859...",
                "console.log(Math.random()); // 0.42983075123758...",
            }),
            Section.WrapHead("Random Integers"),
            "In your code, you'll probably want to generate actual integers, not fancy decimals. You can do this using fancy multiplication and rounding logic using the <code>Math.floor()</code> Function, which takes in a number and returns it rounded down to the nearest Integer.",
            Section.WrapCode("javascript", new string[]
            {
                "console.log(Math.floor(3.14)); // 3"
            }),
            "We'll explain in more detail later, but here's how you generate either 0 or 1 with 50% probability for each:",
            Section.WrapCode("javascript", new string[]
            {
                "number = Math.floor(Math.random() * 2); // Either 0 or 1"
            }),
            "This works: <code>Math.random() * 2</code> turns the random number between 0 and 1 into a random number between 0 and 2 (<code>0 * 2 = 0</code>; <code>.5 * 2 = 1</code>; <code>.999... * 2 = 1.999...</code>), which is then rounded down.",
            "The same logic applies to generating a random number in any range. Multiplying the random by 7, for example, means you would get a number from 0 to 6, because <code>.999 * 7 = 6.999</code>, which rounds down to 6."
        }
    });

    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = "steel",
        Title = "Exercises",
        Paragraphs = new string[] 
        { 
            Section.WrapList(new string[]
            {
                "Write code to generate a random Number between 0 and 3, inclusive (can be 0, 1, 2, or 3).",
                "Write code to generate a random even Number between 0 and 14, inclusive.",
                "Write code to generate a random odd Number between 0 and 7, inclusive.",
                "Create a Function that takes in two Numbers, and generates a random Number between them, inclusive.",
                "Create an Array of Strings, and write code that generates a random Number up to the length of the Array.",
                "Write code to <code>console.log</code> a random member of that Array.",
                "Use <code>setInterval</code> to <code>console.log</code> a random member of that Array every second or so."
            })
        }
    });
}