@using HighSchoolHacking.Models
@model Language

@{
    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = Section.GetNextColor(Model.Color, 4),
        Title = "Strings",
        Extension = Model.NameLower,
        Large = true,
        Back = "/" + Model.Name + "/Learn",
        Paragraphs = new string[]
        {
            "In " + Model.Name + ", a 'String' is a bunch of characters (a character is a letter, number, or symbol). To create a String in " + Model.Name + ", put whatever characters you want between two quotes. It doesn't matter if they're single apostrophes <code>'</code> or double apostrophes <code>\"</code>; they just have to be the same.",
            "That's what happened when you wrote <code>\"Hello world!\"</code> in the Hello World lesson: " + Model.Name + " knew everything between the quotes was a String.",
            Section.WrapCode(Model.NameLower, new string[]
            {
                Model.VariableDeclare + "foo " + Model.Equals + " \"Hello world!\"",
                Model.CallFunction(Model.PrintFunction, "foo") + " " + Model.Commentor + " Hello World!",
            }),
            Section.WrapHead("Concatenating Strings"),
            "<em>concatenate [<code>kənˈkatnˌāt</code>] - to link together; unite in a series or chain.</em>",
            "You can concatenate (combine) Strings in " + Model.Name + " really easily using the " + Model.StringConcatenationStart + "... " + Model.StringConcatenationBetween + " ..." + Model.StringConcatenationEnd + " operator. It's like attaching one string of yarn to another string of yarn, you just get one bigger string.",
            Section.WrapCode(Model.NameLower, new string[]
            {
                Model.CallFunction(Model.PrintFunction, Model.ConcatenateStrings("\"Hello \"", "\"world!\"")) + Model.Semicolon + " " + Model.Commentor + " Hello world!",
            }),
            Section.WrapCode(Model.NameLower, new string[]
            {
                Model.VariableDeclare + "part_one " + Model.Equals + " \"Hello\"" + Model.Semicolon,
                Model.VariableDeclare + "part_two " + Model.Equals + " \"world\"" + Model.Semicolon,
                Model.VariableDeclare + "combined " + Model.Equals + " " + Model.ConcatenateStrings("part_one", "\" \"", "part_two") + Model.Semicolon + " " + Model.Commentor + " \"Hello world\"",
                Model.CallFunction(Model.PrintFunction, Model.ConcatenateStrings("combined", "\"!\"")) + Model.Semicolon + " " + Model.Commentor + " \"Hello world!\""
            })
        }
    });

    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = "steel",
        Title = "Exercises",
        Paragraphs = new string[]
        {
            Section.WrapList(true, new string[]
            {
                "Store your first name, your middle name (if you have one), and your last name in variables. Make a new variable with them all together and print it.",
                "Print your full name in a variable and print it plus the String <code>\" likes coding!\"</code>. Print someone else's name plus the String <code>\" likes coding!\"</code>."
            })
        }
    });

    Html.RenderPartial(Section.ViewFile, new Section
    {
        Color = "brown",
        Title = "Solutions",
        Contracted = true,
        Paragraphs = new string[]
        {
            Section.WrapList(true, new string[]
            {
                "Store your first name, your middle name (if you have one), and your last name in variables. Make a new variable with them all together and print it." + Section.WrapCode(Model.NameLower, new string[]
                {
                    Model.VariableDeclare + "nameFirst " + Model.Equals + " \"Joshua\"" + Model.Semicolon,
                    Model.VariableDeclare + "nameMiddle " + Model.Equals + " \"Kevin\"" + Model.Semicolon,
                    Model.VariableDeclare + "nameLast " + Model.Equals + " \"Goldberg\"" + Model.Semicolon,
                    Model.VariableDeclare + "nameFull " + Model.Equals + " nameFirst + nameMiddle + nameLast" + Model.Semicolon,
                    Model.PrintFunction + "(nameFull)" +  Model.Semicolon + " " + Model.Commentor + " \"Joshua Kevin Goldberg\""
                }),
                "Store your full name in a variable and print it plus the String <code>\" likes coding!\"</code>. Print someone else's name plus the String <code>\" likes coding!\"</code>." + Section.WrapCode(Model.NameLower, new string[]
                {
                    Model.VariableDeclare + "nameMine " + Model.Equals + " \"Joshua Kevin Goldberg\"",
                    Model.PrintFunction + "(nameMine + \" likes coding!\") " + Model.Commentor + " \"Joshua Kevin Goldberg likes coding!\"",
                    "",
                    Model.VariableDeclare + "nameOther " + Model.Equals + "\"Brandon Christopher McLear\"",
                    Model.PrintFunction + "(nameOther + \" likes coding!\") " + Model.Commentor + " \"Brandon Christopher McLear likes coding!\""
                }),
            })
        }
    });

    Html.RenderPartial(Section.SwitcherFile, new KeyValuePair<string, string>(Model.Name, "Strings"));
}